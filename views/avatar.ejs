<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <title>Avatar Uploader</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
            color: #333;
        }
        .container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #2c3e50;
            text-align: center;
        }
        .upload-area {
            border: 2px dashed #3498db;
            border-radius: 5px;
            padding: 30px;
            text-align: center;
            margin: 20px 0;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .upload-area:hover {
            background-color: #f0f8ff;
        }
        .upload-area.highlight {
            background-color: #e3f2fd;
        }
        #fileInput {
            display: none;
        }
        button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #2980b9;
        }
        button:disabled {
            background-color: #95a5a6;
            cursor: not-allowed;
        }
        .preview-container {
            margin-top: 20px;
            text-align: center;
        }
        #imagePreview {
            max-width: 200px;
            max-height: 200px;
            border-radius: 50%;
            display: none;
            margin: 0 auto;
            border: 3px solid #3498db;
        }
        .result-container {
            margin-top: 20px;
            padding: 15px;
            border-radius: 5px;
            background-color: #f9f9f9;
            display: none;
        }
        .link-box {
            display: flex;
            margin-top: 10px;
        }
        #avatarLink {
            flex-grow: 1;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px 0 0 4px;
            font-size: 14px;
            background-color: #fff;
        }
        #copyButton {
            border-radius: 0 4px 4px 0;
            padding: 8px 15px;
        }
        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #3498db;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 2s linear infinite;
            margin: 20px auto;
            display: none;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .error-message {
            color: #e74c3c;
            display: none;
            margin-top: 15px;
        }
		
		.encode-btn {
            position: fixed;
			position: fixed;
			top: 2rem;
			left: 2em;
			background-color: var(--accent-blue);
			border: none;
			padding: 0.75rem 1.5rem;
			border-radius: 50px;
			cursor: pointer;
			font-weight: 600;
			box-shadow: 0 10px 25px rgba(52, 152, 219, 0.3);
			transition: all 0.3sease;
        }

        .encode-btn:hover {
            background-color: #2980b9;
            transform: translateY(-3px);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Avatar Uploader</h1>
        
        <div class="upload-area" id="dropArea">
            <p>Drag & drop your avatar image here</p>
            <p>or</p>
            <button type="button" id="browseButton">Browse Files</button>
            <input type="file" id="fileInput" accept="image/*">
        </div>
        
        <div class="preview-container">
            <img id="imagePreview" src="#" alt="Avatar Preview">
        </div>
        
        <div style="text-align: center;">
            <button type="button" id="uploadButton" disabled>Upload Avatar</button>
        </div>
        
        <div class="loader" id="loader"></div>
        
        <div class="error-message" id="errorMessage"></div>
        
        <div class="result-container" id="resultContainer">
            <h3>Your Avatar Link:</h3>
            <div class="link-box">
                <input type="text" id="avatarLink" readonly>
                <button id="copyButton">Copy</button>
            </div>
        </div>
    </div>
	
	<a href="/encoder"><button class="encode-btn"><i class="fa fa-arrow-left" style="color: black"></i></button></a>

    <script>
        // Elements
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('fileInput');
        const browseButton = document.getElementById('browseButton');
        const imagePreview = document.getElementById('imagePreview');
        const uploadButton = document.getElementById('uploadButton');
        const loader = document.getElementById('loader');
        const resultContainer = document.getElementById('resultContainer');
        const avatarLink = document.getElementById('avatarLink');
        const copyButton = document.getElementById('copyButton');
        const errorMessage = document.getElementById('errorMessage');
        
        // Event listeners
        browseButton.addEventListener('click', () => fileInput.click());
        
        fileInput.addEventListener('change', handleFile);
        
        uploadButton.addEventListener('click', uploadImage);
        
        copyButton.addEventListener('click', () => {
            avatarLink.select();
            document.execCommand('copy');
            copyButton.textContent = 'Copied!';
            setTimeout(() => {
                copyButton.textContent = 'Copy';
            }, 2000);
        });
        
        // Drag and drop functionality
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });
        
        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }
        
        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });
        
        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });
        
        function highlight() {
            dropArea.classList.add('highlight');
        }
        
        function unhighlight() {
            dropArea.classList.remove('highlight');
        }
        
        dropArea.addEventListener('drop', handleDrop, false);
        
        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            
            if (files.length) {
                fileInput.files = files;
                handleFile();
            }
        }
        
        function handleFile() {
            const file = fileInput.files[0];
            
            if (file) {
                // Check if the file is an image
                if (!file.type.match('image.*')) {
                    showError('Please select an image file (JPEG, PNG, GIF, etc.)');
                    return;
                }
                
                // Check file size (max 2MB)
                if (file.size > 2 * 1024 * 1024) {
                    showError('File size exceeds 2MB. Please choose a smaller image.');
                    return;
                }
                
                // Hide any previous error
                hideError();
                
                // Show image preview
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                    uploadButton.disabled = false;
                };
                reader.readAsDataURL(file);
            }
        }
        
        function uploadImage() {
            const file = fileInput.files[0];
            if (!file) return;
            
            // Show loader
            loader.style.display = 'block';
            uploadButton.disabled = true;
            resultContainer.style.display = 'none';
            
            // Create FormData
            const formData = new FormData();
            formData.append('image', file);
            
            // Using ImgBB API
            fetch('https://api.imgbb.com/1/upload?key=4d1d745bdc2a74f6981b2ef9e129feb3', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Hide loader
                loader.style.display = 'none';
                
                if (data.success) {
                    // Show result
                    avatarLink.value = data.data.url;
                    resultContainer.style.display = 'block';
                } else {
                    showError('Upload failed. Please try again.');
                }
                
                uploadButton.disabled = false;
            })
            .catch(error => {
                console.error('Error:', error);
                loader.style.display = 'none';
                uploadButton.disabled = false;
                showError('An error occurred during upload. Please try again.');
            });
        }
        
        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
        }
        
        function hideError() {
            errorMessage.style.display = 'none';
        }
    </script>
</body>
</html>
